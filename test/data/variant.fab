type t1 =
  | A Int Int
  | B Int

type t2 =
  | C t1 (Int, Int)
  | D

name complexMatch x =
  match x with
  | #C (#A a b) (c, d) -> a + b + c + d
  | #C (#B i) (a, b) -> i + a * b
  | #D -> 10

name main = a + b + c
  where
  - a = complexMatch (C (A 4 5) (6, 7))
  - b = complexMatch (C (B 12) (3, 4))
  - c = complexMatch D